"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.readAndChoose = exports.read = void 0;
const readline_1 = __importDefault(require("readline"));
const rl = readline_1.default.createInterface({
    input: process.stdin,
    output: process.stdout,
});
/**
 * Ask user and get user's input from stdin
 * @param {?string} question - Optional question to be appeared before promt user's input
 * @return {Promise<string>} - User's input
 */
async function read(q) {
    return new Promise((resolve) => {
        const question = q ? q.trim() + '\n> ' : '> ';
        rl.question(question, answer => resolve(answer));
    });
}
exports.read = read;
/**
 * Ask user to choose between choices and get user's input from stdin
 * @param {string} question - Question to be appeared before promt user's input
 * @param {string[]} choices - Choices for user to choose
 * @return {Promise<string>} - User's input
 */
async function readAndChoose(question, choices) {
    const questionsWithChoices = `${question} [choose in range 1-${choices.length}]:\n` +
        choices.reduce((acc, answer, index) => `${acc}${index + 1}. ${answer}\n`, '');
    const ans = +(await read(questionsWithChoices));
    return choices[ans - 1];
}
exports.readAndChoose = readAndChoose;
